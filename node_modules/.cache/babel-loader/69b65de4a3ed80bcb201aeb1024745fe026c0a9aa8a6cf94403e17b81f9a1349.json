{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Documents/GitHub/fin/finlete-fe/src/components/CreateInvestorForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CreateInvestorForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateInvestorForm = ({\n  selectedDeal,\n  onBack\n}) => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    investmentAmount: '',\n    investorType: '',\n    streetAddress: '',\n    unit: '',\n    city: '',\n    postalCode: '',\n    state: '',\n    country: '',\n    dateOfBirth: '',\n    taxpayerId: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [investorId, setInvestorId] = useState(null);\n  const [accessLink, setAccessLink] = useState(null);\n  const API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://finlete-be.vercel.app/api' : 'https://finlete-be.vercel.app/api';\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    setErrors(prev => ({\n      ...prev,\n      [field]: ''\n    }));\n  };\n  const validateStep = step => {\n    const errors = {};\n    if (step === 1) {\n      if (!formData.firstName) errors.firstName = 'First name is required';\n      if (!formData.lastName) errors.lastName = 'Last name is required';\n      if (!formData.email) errors.email = 'Email is required';\n      if (!formData.phone) errors.phone = 'Phone is required';\n    }\n    if (step === 2) {\n      if (!formData.investmentAmount) errors.investmentAmount = 'Investment amount is required';\n      if (Number(formData.investmentAmount) < 300) errors.investmentAmount = 'Minimum investment is $300';\n    }\n    if (step === 3) {\n      if (!formData.investorType) errors.investorType = 'Investor type is required';\n      if (!formData.streetAddress) errors.streetAddress = 'Street address is required';\n      if (!formData.city) errors.city = 'City is required';\n      if (!formData.postalCode) errors.postalCode = 'Postal code is required';\n      if (!formData.state) errors.state = 'State is required';\n      if (!formData.country) errors.country = 'Country is required';\n      if (!formData.dateOfBirth) errors.dateOfBirth = 'Date of birth is required';\n      if (!formData.taxpayerId) errors.taxpayerId = 'Taxpayer ID is required';\n    }\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const createInvestor = async (data, retryCount = 0) => {\n    try {\n      console.log(`Creating investor (attempt ${retryCount + 1})...`);\n      const response = await fetch(`${API_BASE_URL}/deals/${selectedDeal.id}/investors`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(data),\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit'\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log('Investor created successfully');\n      return result;\n    } catch (error) {\n      console.error('Error creating investor:', error);\n\n      // Retry up to 3 times with exponential backoff\n      if (retryCount < 3) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        console.log(`Retrying in ${delay}ms...`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return createInvestor(data, retryCount + 1);\n      }\n      throw error;\n    }\n  };\n  const updateInvestor = async (investorId, data, retryCount = 0) => {\n    try {\n      console.log(`Updating investor (attempt ${retryCount + 1})...`);\n      const response = await fetch(`${API_BASE_URL}/deals/${selectedDeal.id}/investors/${investorId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(data),\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit'\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log('Investor updated successfully');\n      return result;\n    } catch (error) {\n      console.error('Error updating investor:', error);\n\n      // Retry up to 3 times with exponential backoff\n      if (retryCount < 3) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        console.log(`Retrying in ${delay}ms...`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return updateInvestor(investorId, data, retryCount + 1);\n      }\n      throw error;\n    }\n  };\n  const createIndividualProfile = async (investorData, investorType, retryCount = 0) => {\n    try {\n      const url = `${API_BASE_URL}/investor_profiles/${investorType}`;\n      console.log(`Creating individual profile (attempt ${retryCount + 1})...`);\n      console.log('Making request to:', url);\n      console.log('Request data:', investorData);\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit',\n        body: JSON.stringify(investorData)\n      });\n      console.log('Response status:', response.status);\n      console.log('Response headers:', response.headers);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.log('Error response:', errorData);\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log('Individual profile created successfully');\n      return result;\n    } catch (error) {\n      console.error('Error creating individual profile:', error);\n\n      // Retry up to 3 times with exponential backoff\n      if (retryCount < 3) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        console.log(`Retrying in ${delay}ms...`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return createIndividualProfile(investorData, investorType, retryCount + 1);\n      }\n      throw error;\n    }\n  };\n  const handleNextStep = async () => {\n    if (!validateStep(currentStep)) return;\n    if (currentStep === 1) {\n      setLoading(true);\n      try {\n        // Format phone number to E.164 format\n        const formatPhoneNumber = phone => {\n          // Remove all non-digit characters\n          const digits = phone.replace(/\\D/g, '');\n\n          // If it starts with 1 and has 11 digits, it's already US format\n          if (digits.length === 11 && digits.startsWith('1')) {\n            return `+${digits}`;\n          }\n\n          // If it has 10 digits, assume it's US number and add +1\n          if (digits.length === 10) {\n            return `+1${digits}`;\n          }\n\n          // If it already starts with +, return as is\n          if (phone.startsWith('+')) {\n            return phone;\n          }\n\n          // Default: add +1 for US numbers\n          return `+1${digits}`;\n        };\n        const investorData = {\n          first_name: formData.firstName,\n          last_name: formData.lastName,\n          email: formData.email,\n          phone_number: formatPhoneNumber(formData.phone),\n          tags: ['web-form'],\n          deal_id: selectedDeal.id\n        };\n        const response = await createInvestor(investorData);\n        setInvestorId(response.id); // Store the investor ID from response\n        setCurrentStep(2);\n      } catch (error) {\n        setErrors({\n          api: error.message || 'Failed to create investor. Please try again.'\n        });\n      } finally {\n        setLoading(false);\n      }\n    } else if (currentStep === 2) {\n      setLoading(true);\n      try {\n        const investmentData = {\n          investment_value: parseFloat(formData.investmentAmount),\n          number_of_securities: Math.round(formData.investmentAmount / selectedDeal.price_per_security)\n        };\n        const response = await updateInvestor(investorId, investmentData);\n        if (response.access_link) {\n          setAccessLink(response.access_link);\n        }\n        setCurrentStep(3);\n      } catch (error) {\n        setErrors({\n          api: error.message || 'Failed to update investment amount. Please try again.'\n        });\n      } finally {\n        setLoading(false);\n      }\n    } else if (currentStep === 3) {\n      setLoading(true);\n      try {\n        // Format date to match backend expectation (YYYY-MM-DD)\n        const formatDate = dateString => {\n          const date = new Date(dateString);\n          return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n        };\n        let profileData = {};\n        if (formData.investorType === 'individuals') {\n          profileData = {\n            first_name: String(formData.firstName),\n            email: String(formData.email),\n            last_name: String(formData.lastName),\n            phone_number: formData.phone.replace(/-/g, \"\"),\n            investorInfo: String(formData.investorType),\n            city: String(formData.city),\n            country: String(formData.country),\n            date_of_birth: String(formatDate(formData.dateOfBirth)),\n            investor_id: Number(investorId),\n            investor_profile_id: Number(investorId),\n            postal_code: String(formData.postalCode),\n            region: String(formData.state),\n            street_address: String(formData.streetAddress),\n            unit2: String(formData.unit || \"\"),\n            taxpayer_id: String(formData.taxpayerId)\n          };\n        } else if (formData.investorType === 'joints') {\n          // For joint accounts, we'll need additional fields\n          // This is a placeholder - you may need to add joint holder fields to the form\n          profileData = {\n            first_name: String(formData.firstName),\n            email: String(formData.email),\n            last_name: String(formData.lastName),\n            phone_number: formData.phone.replace(/-/g, \"\"),\n            investorInfo: String(formData.investorType),\n            city: String(formData.city),\n            country: String(formData.country),\n            date_of_birth: String(formatDate(formData.dateOfBirth)),\n            investor_id: Number(investorId),\n            postal_code: String(formData.postalCode),\n            region: String(formData.state),\n            street_address: String(formData.streetAddress),\n            unit2: String(formData.unit || \"\"),\n            taxpayer_id: String(formData.taxpayerId)\n            // Note: Joint holder fields would need to be added to the form\n          };\n        }\n        const profileResponse = await createIndividualProfile(profileData, formData.investorType);\n\n        // Use the response ID to update the investor with the profile ID\n        if (profileResponse && profileResponse.id) {\n          await updateInvestor(profileResponse.id, {});\n        }\n\n        // Redirect to payment page if access_link is available\n        console.log(\"aaaaaaaa\", accessLink);\n        // if (accessLink) {\n        //   window.location.href = accessLink;\n        // } else {\n        //   setSuccess(true);\n        // }\n      } catch (error) {\n        setErrors({\n          api: error.message || 'Failed to complete investor profile.'\n        });\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  const handlePrevStep = () => {\n    if (currentStep > 1) setCurrentStep(currentStep - 1);\n  };\n  if (success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-investor-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDF89 Investor Created Successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Investor ID: \", investorId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deal: \", selectedDeal.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => window.location.reload(),\n          children: \"Create Another Investor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-investor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDC64 Create New Investor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Deal: \", selectedDeal.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Deal ID: \", selectedDeal.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: onBack,\n        children: \"\\u2190 Back to Deals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-step ${currentStep >= 1 ? 'active' : ''}`,\n        children: \"1. Basic Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-step ${currentStep >= 2 ? 'active' : ''}`,\n        children: \"2. Investment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-step ${currentStep >= 3 ? 'active' : ''}`,\n        children: \"3. Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), errors.api && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: errors.api\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: [currentStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.firstName,\n            onChange: e => handleInputChange('firstName', e.target.value),\n            className: errors.firstName ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.lastName,\n            onChange: e => handleInputChange('lastName', e.target.value),\n            className: errors.lastName ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: formData.email,\n            onChange: e => handleInputChange('email', e.target.value),\n            className: errors.email ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            value: formData.phone,\n            onChange: e => handleInputChange('phone', e.target.value),\n            className: errors.phone ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), currentStep === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Investment Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Investment Amount (USD) *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: formData.investmentAmount,\n            onChange: e => handleInputChange('investmentAmount', e.target.value),\n            className: errors.investmentAmount ? 'error' : '',\n            min: \"300\",\n            placeholder: \"Enter amount (min $300)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), errors.investmentAmount && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.investmentAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), currentStep === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Investor Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Investor Type *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.investorType,\n            onChange: e => handleInputChange('investorType', e.target.value),\n            className: errors.investorType ? 'error' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select investor type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"individuals\",\n              children: \"Individual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"joints\",\n              children: \"Joint Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"corporation\",\n              children: \"Corporation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"trust\",\n              children: \"Trust\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), errors.investorType && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.investorType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Street Address *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.streetAddress,\n            onChange: e => handleInputChange('streetAddress', e.target.value),\n            className: errors.streetAddress ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), errors.streetAddress && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.streetAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Unit/Apt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.unit,\n            onChange: e => handleInputChange('unit', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"City *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.city,\n              onChange: e => handleInputChange('city', e.target.value),\n              className: errors.city ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), errors.city && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Postal Code *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.postalCode,\n              onChange: e => handleInputChange('postalCode', e.target.value),\n              className: errors.postalCode ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), errors.postalCode && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.postalCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"State *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.state,\n              onChange: e => handleInputChange('state', e.target.value),\n              className: errors.state ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), errors.state && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Country *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.country,\n              onChange: e => handleInputChange('country', e.target.value),\n              className: errors.country ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this), errors.country && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date of Birth *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: formData.dateOfBirth,\n              onChange: e => handleInputChange('dateOfBirth', e.target.value),\n              className: errors.dateOfBirth ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this), errors.dateOfBirth && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.dateOfBirth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Taxpayer ID *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.taxpayerId,\n              onChange: e => handleInputChange('taxpayerId', e.target.value),\n              className: errors.taxpayerId ? 'error' : '',\n              placeholder: \"XXX-XX-XXXX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), errors.taxpayerId && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.taxpayerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [currentStep > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handlePrevStep,\n          disabled: loading,\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleNextStep,\n          disabled: loading,\n          children: loading ? 'Processing...' : currentStep === 3 ? 'Create Investor' : 'Next →'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateInvestorForm, \"qveVfML3ipx12380MSQQBrykYhk=\");\n_c = CreateInvestorForm;\nexport default CreateInvestorForm;\nvar _c;\n$RefreshReg$(_c, \"CreateInvestorForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateInvestorForm","selectedDeal","onBack","_s","currentStep","setCurrentStep","formData","setFormData","firstName","lastName","email","phone","investmentAmount","investorType","streetAddress","unit","city","postalCode","state","country","dateOfBirth","taxpayerId","errors","setErrors","loading","setLoading","success","setSuccess","investorId","setInvestorId","accessLink","setAccessLink","API_BASE_URL","process","env","NODE_ENV","handleInputChange","field","value","prev","validateStep","step","Number","Object","keys","length","createInvestor","data","retryCount","console","log","response","fetch","id","method","headers","body","JSON","stringify","mode","cache","credentials","ok","errorData","json","catch","Error","message","error","status","result","delay","Math","pow","Promise","resolve","setTimeout","updateInvestor","createIndividualProfile","investorData","url","handleNextStep","formatPhoneNumber","digits","replace","startsWith","first_name","last_name","phone_number","tags","deal_id","api","investmentData","investment_value","parseFloat","number_of_securities","round","price_per_security","access_link","formatDate","dateString","date","Date","getFullYear","getMonth","toString","padStart","getDate","profileData","String","investorInfo","date_of_birth","investor_id","investor_profile_id","postal_code","region","street_address","unit2","taxpayer_id","profileResponse","handlePrevStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","window","location","reload","type","onChange","e","target","min","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/dev/Documents/GitHub/fin/finlete-fe/src/components/CreateInvestorForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './CreateInvestorForm.css';\n\nconst CreateInvestorForm = ({ selectedDeal, onBack }) => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState({\n    firstName: '', lastName: '', email: '', phone: '',\n    investmentAmount: '', investorType: '', streetAddress: '',\n    unit: '', city: '', postalCode: '', state: '', country: '',\n    dateOfBirth: '', taxpayerId: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [investorId, setInvestorId] = useState(null);\n  const [accessLink, setAccessLink] = useState(null);\n\n  const API_BASE_URL = process.env.NODE_ENV === 'production'\n    ? 'https://finlete-be.vercel.app/api'\n    : 'https://finlete-be.vercel.app/api';\n\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    setErrors(prev => ({ ...prev, [field]: '' }));\n  };\n\n  const validateStep = (step) => {\n    const errors = {};\n    \n    if (step === 1) {\n      if (!formData.firstName) errors.firstName = 'First name is required';\n      if (!formData.lastName) errors.lastName = 'Last name is required';\n      if (!formData.email) errors.email = 'Email is required';\n      if (!formData.phone) errors.phone = 'Phone is required';\n    }\n    \n    if (step === 2) {\n      if (!formData.investmentAmount) errors.investmentAmount = 'Investment amount is required';\n      if (Number(formData.investmentAmount) < 300) errors.investmentAmount = 'Minimum investment is $300';\n    }\n    \n    if (step === 3) {\n      if (!formData.investorType) errors.investorType = 'Investor type is required';\n      if (!formData.streetAddress) errors.streetAddress = 'Street address is required';\n      if (!formData.city) errors.city = 'City is required';\n      if (!formData.postalCode) errors.postalCode = 'Postal code is required';\n      if (!formData.state) errors.state = 'State is required';\n      if (!formData.country) errors.country = 'Country is required';\n      if (!formData.dateOfBirth) errors.dateOfBirth = 'Date of birth is required';\n      if (!formData.taxpayerId) errors.taxpayerId = 'Taxpayer ID is required';\n    }\n    \n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const createInvestor = async (data, retryCount = 0) => {\n    try {\n      console.log(`Creating investor (attempt ${retryCount + 1})...`);\n      \n      const response = await fetch(`${API_BASE_URL}/deals/${selectedDeal.id}/investors`, {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(data),\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit'\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      console.log('Investor created successfully');\n      return result;\n    } catch (error) {\n      console.error('Error creating investor:', error);\n      \n      // Retry up to 3 times with exponential backoff\n      if (retryCount < 3) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        console.log(`Retrying in ${delay}ms...`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return createInvestor(data, retryCount + 1);\n      }\n      \n      throw error;\n    }\n  };\n\n  const updateInvestor = async (investorId, data, retryCount = 0) => {\n    try {\n      console.log(`Updating investor (attempt ${retryCount + 1})...`);\n      \n      const response = await fetch(`${API_BASE_URL}/deals/${selectedDeal.id}/investors/${investorId}`, {\n        method: 'PUT',\n        headers: { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(data),\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit'\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      console.log('Investor updated successfully');\n      return result;\n    } catch (error) {\n      console.error('Error updating investor:', error);\n      \n      // Retry up to 3 times with exponential backoff\n      if (retryCount < 3) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        console.log(`Retrying in ${delay}ms...`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return updateInvestor(investorId, data, retryCount + 1);\n      }\n      \n      throw error;\n    }\n  };\n\n  const createIndividualProfile = async (investorData, investorType, retryCount = 0) => {\n    try {\n      const url = `${API_BASE_URL}/investor_profiles/${investorType}`;\n      console.log(`Creating individual profile (attempt ${retryCount + 1})...`);\n      console.log('Making request to:', url);\n      console.log('Request data:', investorData);\n      \n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'omit',\n        body: JSON.stringify(investorData)\n      });\n\n      console.log('Response status:', response.status);\n      console.log('Response headers:', response.headers);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.log('Error response:', errorData);\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      console.log('Individual profile created successfully');\n      return result;\n    } catch (error) {\n      console.error('Error creating individual profile:', error);\n      \n      // Retry up to 3 times with exponential backoff\n      if (retryCount < 3) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        console.log(`Retrying in ${delay}ms...`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return createIndividualProfile(investorData, investorType, retryCount + 1);\n      }\n      \n      throw error;\n    }\n  };\n\n  const handleNextStep = async () => {\n    if (!validateStep(currentStep)) return;\n\n    if (currentStep === 1) {\n      setLoading(true);\n      try {\n        // Format phone number to E.164 format\n        const formatPhoneNumber = (phone) => {\n          // Remove all non-digit characters\n          const digits = phone.replace(/\\D/g, '');\n          \n          // If it starts with 1 and has 11 digits, it's already US format\n          if (digits.length === 11 && digits.startsWith('1')) {\n            return `+${digits}`;\n          }\n          \n          // If it has 10 digits, assume it's US number and add +1\n          if (digits.length === 10) {\n            return `+1${digits}`;\n          }\n          \n          // If it already starts with +, return as is\n          if (phone.startsWith('+')) {\n            return phone;\n          }\n          \n          // Default: add +1 for US numbers\n          return `+1${digits}`;\n        };\n\n        const investorData = {\n          first_name: formData.firstName,\n          last_name: formData.lastName,\n          email: formData.email,\n          phone_number: formatPhoneNumber(formData.phone),\n          tags: ['web-form'],\n          deal_id: selectedDeal.id,\n        };\n\n        const response = await createInvestor(investorData);\n        setInvestorId(response.id); // Store the investor ID from response\n        setCurrentStep(2);\n      } catch (error) {\n        setErrors({ api: error.message || 'Failed to create investor. Please try again.' });\n      } finally {\n        setLoading(false);\n      }\n    } else if (currentStep === 2) {\n      setLoading(true);\n      try {\n        const investmentData = {\n          investment_value: parseFloat(formData.investmentAmount),\n          number_of_securities: Math.round(formData.investmentAmount / selectedDeal.price_per_security),\n        };\n\n        const response = await updateInvestor(investorId, investmentData);\n        if (response.access_link) {\n          setAccessLink(response.access_link);\n        }\n        setCurrentStep(3);\n      } catch (error) {\n        setErrors({ api: error.message || 'Failed to update investment amount. Please try again.' });\n      } finally {\n        setLoading(false);\n      }\n    } else if (currentStep === 3) {\n      setLoading(true);\n      try {\n        // Format date to match backend expectation (YYYY-MM-DD)\n        const formatDate = (dateString) => {\n          const date = new Date(dateString);\n          return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n        };\n\n        let profileData = {};\n        \n        if (formData.investorType === 'individuals') {\n          profileData = {\n            first_name: String(formData.firstName),\n            email: String(formData.email),\n            last_name: String(formData.lastName),\n            phone_number: formData.phone.replace(/-/g, \"\"),\n            investorInfo: String(formData.investorType),\n            city: String(formData.city),\n            country: String(formData.country),\n            date_of_birth: String(formatDate(formData.dateOfBirth)),\n            investor_id: Number(investorId),\n            investor_profile_id: Number(investorId),\n            postal_code: String(formData.postalCode),\n            region: String(formData.state),\n            street_address: String(formData.streetAddress),\n            unit2: String(formData.unit || \"\"),\n            taxpayer_id: String(formData.taxpayerId),\n          };\n        } else if (formData.investorType === 'joints') {\n          // For joint accounts, we'll need additional fields\n          // This is a placeholder - you may need to add joint holder fields to the form\n          profileData = {\n            first_name: String(formData.firstName),\n            email: String(formData.email),\n            last_name: String(formData.lastName),\n            phone_number: formData.phone.replace(/-/g, \"\"),\n            investorInfo: String(formData.investorType),\n            city: String(formData.city),\n            country: String(formData.country),\n            date_of_birth: String(formatDate(formData.dateOfBirth)),\n            investor_id: Number(investorId),\n            postal_code: String(formData.postalCode),\n            region: String(formData.state),\n            street_address: String(formData.streetAddress),\n            unit2: String(formData.unit || \"\"),\n            taxpayer_id: String(formData.taxpayerId),\n            // Note: Joint holder fields would need to be added to the form\n          };\n        }\n\n        const profileResponse = await createIndividualProfile(profileData, formData.investorType);\n        \n        // Use the response ID to update the investor with the profile ID\n        if (profileResponse && profileResponse.id) {\n          await updateInvestor(profileResponse.id, {});\n        }\n        \n        // Redirect to payment page if access_link is available\n        console.log(\"aaaaaaaa\", accessLink)\n        // if (accessLink) {\n        //   window.location.href = accessLink;\n        // } else {\n        //   setSuccess(true);\n        // }\n      } catch (error) {\n        setErrors({ api: error.message || 'Failed to complete investor profile.' });\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  const handlePrevStep = () => {\n    if (currentStep > 1) setCurrentStep(currentStep - 1);\n  };\n\n  if (success) {\n    return (\n      <div className=\"create-investor-container\">\n        <div className=\"success-message\">\n          <h2>🎉 Investor Created Successfully!</h2>\n          <p>Investor ID: {investorId}</p>\n          <p>Deal: {selectedDeal.title}</p>\n          <button className=\"btn btn-primary\" onClick={() => window.location.reload()}>\n            Create Another Investor\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"create-investor-container\">\n              <div className=\"form-header\">\n          <h1>👤 Create New Investor</h1>\n          <p>Deal: {selectedDeal.title}</p>\n          <p>Deal ID: {selectedDeal.id}</p>\n          <button className=\"back-btn\" onClick={onBack}>\n            ← Back to Deals\n          </button>\n        </div>\n\n      <div className=\"progress-bar\">\n        <div className={`progress-step ${currentStep >= 1 ? 'active' : ''}`}>1. Basic Info</div>\n        <div className={`progress-step ${currentStep >= 2 ? 'active' : ''}`}>2. Investment</div>\n        <div className={`progress-step ${currentStep >= 3 ? 'active' : ''}`}>3. Details</div>\n      </div>\n\n      {errors.api && <div className=\"alert alert-danger\">{errors.api}</div>}\n\n      <div className=\"form-content\">\n        {currentStep === 1 && (\n          <div className=\"form-step\">\n            <h3>Basic Information</h3>\n            <div className=\"form-group\">\n              <label>First Name *</label>\n              <input\n                type=\"text\"\n                value={formData.firstName}\n                onChange={(e) => handleInputChange('firstName', e.target.value)}\n                className={errors.firstName ? 'error' : ''}\n              />\n              {errors.firstName && <span className=\"error-message\">{errors.firstName}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Last Name *</label>\n              <input\n                type=\"text\"\n                value={formData.lastName}\n                onChange={(e) => handleInputChange('lastName', e.target.value)}\n                className={errors.lastName ? 'error' : ''}\n              />\n              {errors.lastName && <span className=\"error-message\">{errors.lastName}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Email *</label>\n              <input\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => handleInputChange('email', e.target.value)}\n                className={errors.email ? 'error' : ''}\n              />\n              {errors.email && <span className=\"error-message\">{errors.email}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Phone *</label>\n              <input\n                type=\"tel\"\n                value={formData.phone}\n                onChange={(e) => handleInputChange('phone', e.target.value)}\n                className={errors.phone ? 'error' : ''}\n              />\n              {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\n            </div>\n          </div>\n        )}\n\n        {currentStep === 2 && (\n          <div className=\"form-step\">\n            <h3>Investment Amount</h3>\n            <div className=\"form-group\">\n              <label>Investment Amount (USD) *</label>\n              <input\n                type=\"number\"\n                value={formData.investmentAmount}\n                onChange={(e) => handleInputChange('investmentAmount', e.target.value)}\n                className={errors.investmentAmount ? 'error' : ''}\n                min=\"300\"\n                placeholder=\"Enter amount (min $300)\"\n              />\n              {errors.investmentAmount && <span className=\"error-message\">{errors.investmentAmount}</span>}\n            </div>\n          </div>\n        )}\n\n        {currentStep === 3 && (\n          <div className=\"form-step\">\n            <h3>Investor Details</h3>\n            \n            <div className=\"form-group\">\n              <label>Investor Type *</label>\n              <select\n                value={formData.investorType}\n                onChange={(e) => handleInputChange('investorType', e.target.value)}\n                className={errors.investorType ? 'error' : ''}\n              >\n                <option value=\"\">Select investor type</option>\n                <option value=\"individuals\">Individual</option>\n                <option value=\"joints\">Joint Account</option>\n                <option value=\"corporation\">Corporation</option>\n                <option value=\"trust\">Trust</option>\n              </select>\n              {errors.investorType && <span className=\"error-message\">{errors.investorType}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Street Address *</label>\n              <input\n                type=\"text\"\n                value={formData.streetAddress}\n                onChange={(e) => handleInputChange('streetAddress', e.target.value)}\n                className={errors.streetAddress ? 'error' : ''}\n              />\n              {errors.streetAddress && <span className=\"error-message\">{errors.streetAddress}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Unit/Apt</label>\n              <input\n                type=\"text\"\n                value={formData.unit}\n                onChange={(e) => handleInputChange('unit', e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>City *</label>\n                <input\n                  type=\"text\"\n                  value={formData.city}\n                  onChange={(e) => handleInputChange('city', e.target.value)}\n                  className={errors.city ? 'error' : ''}\n                />\n                {errors.city && <span className=\"error-message\">{errors.city}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Postal Code *</label>\n                <input\n                  type=\"text\"\n                  value={formData.postalCode}\n                  onChange={(e) => handleInputChange('postalCode', e.target.value)}\n                  className={errors.postalCode ? 'error' : ''}\n                />\n                {errors.postalCode && <span className=\"error-message\">{errors.postalCode}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>State *</label>\n                <input\n                  type=\"text\"\n                  value={formData.state}\n                  onChange={(e) => handleInputChange('state', e.target.value)}\n                  className={errors.state ? 'error' : ''}\n                />\n                {errors.state && <span className=\"error-message\">{errors.state}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Country *</label>\n                <input\n                  type=\"text\"\n                  value={formData.country}\n                  onChange={(e) => handleInputChange('country', e.target.value)}\n                  className={errors.country ? 'error' : ''}\n                />\n                {errors.country && <span className=\"error-message\">{errors.country}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Date of Birth *</label>\n                <input\n                  type=\"date\"\n                  value={formData.dateOfBirth}\n                  onChange={(e) => handleInputChange('dateOfBirth', e.target.value)}\n                  className={errors.dateOfBirth ? 'error' : ''}\n                />\n                {errors.dateOfBirth && <span className=\"error-message\">{errors.dateOfBirth}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Taxpayer ID *</label>\n                <input\n                  type=\"text\"\n                  value={formData.taxpayerId}\n                  onChange={(e) => handleInputChange('taxpayerId', e.target.value)}\n                  className={errors.taxpayerId ? 'error' : ''}\n                  placeholder=\"XXX-XX-XXXX\"\n                />\n                {errors.taxpayerId && <span className=\"error-message\">{errors.taxpayerId}</span>}\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"form-actions\">\n          {currentStep > 1 && (\n            <button className=\"btn btn-secondary\" onClick={handlePrevStep} disabled={loading}>\n              ← Previous\n            </button>\n          )}\n          \n          <button className=\"btn btn-primary\" onClick={handleNextStep} disabled={loading}>\n            {loading ? 'Processing...' : currentStep === 3 ? 'Create Investor' : 'Next →'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateInvestorForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}