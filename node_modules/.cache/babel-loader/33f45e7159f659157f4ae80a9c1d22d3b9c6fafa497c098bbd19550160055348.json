{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Documents/GitHub/react-frontend/src/components/CreateInvestorForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CreateInvestorForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateInvestorForm = ({\n  selectedDeal,\n  onBack\n}) => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    investmentAmount: '',\n    investorType: '',\n    streetAddress: '',\n    unit: '',\n    city: '',\n    postalCode: '',\n    state: '',\n    country: '',\n    dateOfBirth: '',\n    taxpayerId: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [investorId, setInvestorId] = useState(null);\n  const [accessLink, setAccessLink] = useState(null);\n  const API_BASE_URL = 'http://localhost:3000/api';\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    setErrors(prev => ({\n      ...prev,\n      [field]: ''\n    }));\n  };\n  const validateStep = step => {\n    const errors = {};\n    if (step === 1) {\n      if (!formData.firstName) errors.firstName = 'First name is required';\n      if (!formData.lastName) errors.lastName = 'Last name is required';\n      if (!formData.email) errors.email = 'Email is required';\n      if (!formData.phone) errors.phone = 'Phone is required';\n    }\n    if (step === 2) {\n      if (!formData.investmentAmount) errors.investmentAmount = 'Investment amount is required';\n      if (Number(formData.investmentAmount) < 300) errors.investmentAmount = 'Minimum investment is $300';\n    }\n    if (step === 3) {\n      if (!formData.investorType) errors.investorType = 'Investor type is required';\n      if (!formData.streetAddress) errors.streetAddress = 'Street address is required';\n      if (!formData.city) errors.city = 'City is required';\n      if (!formData.postalCode) errors.postalCode = 'Postal code is required';\n      if (!formData.state) errors.state = 'State is required';\n      if (!formData.country) errors.country = 'Country is required';\n      if (!formData.dateOfBirth) errors.dateOfBirth = 'Date of birth is required';\n      if (!formData.taxpayerId) errors.taxpayerId = 'Taxpayer ID is required';\n    }\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const createInvestor = async (data, retryCount = 0) => {\n    try {\n      console.log(`Creating investor (attempt ${retryCount + 1})...`);\n      const response = await fetch(`${API_BASE_URL}/deals/${selectedDeal.id}/investors`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        mode: 'cors',\n        cache: 'no-cache'\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log('Investor created successfully');\n      return result;\n    } catch (error) {\n      console.error('Error creating investor:', error);\n\n      // Retry up to 3 times with exponential backoff\n      if (retryCount < 3) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        console.log(`Retrying in ${delay}ms...`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return createInvestor(data, retryCount + 1);\n      }\n      throw error;\n    }\n  };\n  const updateInvestor = async (investorId, data, retryCount = 0) => {\n    try {\n      console.log(`Updating investor (attempt ${retryCount + 1})...`);\n      const response = await fetch(`${API_BASE_URL}/deals/${selectedDeal.id}/investors/${investorId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n        mode: 'cors',\n        cache: 'no-cache'\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log('Investor updated successfully');\n      return result;\n    } catch (error) {\n      console.error('Error updating investor:', error);\n\n      // Retry up to 3 times with exponential backoff\n      if (retryCount < 3) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        console.log(`Retrying in ${delay}ms...`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return updateInvestor(investorId, data, retryCount + 1);\n      }\n      throw error;\n    }\n  };\n  const createIndividualProfile = async (investorData, investorType) => {\n    try {\n      const url = `${API_BASE_URL}/investor_profiles/${investorType}`;\n      console.log('Making request to:', url);\n      console.log('Request data:', investorData);\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(investorData)\n      });\n      console.log('Response status:', response.status);\n      console.log('Response headers:', response.headers);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.log('Error response:', errorData);\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error creating individual profile:', error);\n      throw error;\n    }\n  };\n  const handleNextStep = async () => {\n    if (!validateStep(currentStep)) return;\n    if (currentStep === 1) {\n      setLoading(true);\n      try {\n        const investorData = {\n          first_name: formData.firstName,\n          last_name: formData.lastName,\n          email: formData.email,\n          phone_number: formData.phone,\n          tags: ['web-form'],\n          deal_id: selectedDeal.id\n        };\n        const response = await createInvestor(investorData);\n        setInvestorId(response.id); // Store the investor ID from response\n        setCurrentStep(2);\n      } catch (error) {\n        setErrors({\n          api: error.message || 'Failed to create investor. Please try again.'\n        });\n      } finally {\n        setLoading(false);\n      }\n    } else if (currentStep === 2) {\n      setLoading(true);\n      try {\n        const investmentData = {\n          investment_value: parseFloat(formData.investmentAmount),\n          number_of_securities: Math.round(formData.investmentAmount / selectedDeal.price_per_security)\n        };\n        const response = await updateInvestor(investorId, investmentData);\n        if (response.access_link) {\n          setAccessLink(response.access_link);\n        }\n        setCurrentStep(3);\n      } catch (error) {\n        setErrors({\n          api: error.message || 'Failed to update investment amount. Please try again.'\n        });\n      } finally {\n        setLoading(false);\n      }\n    } else if (currentStep === 3) {\n      setLoading(true);\n      try {\n        // Format date to match backend expectation (YYYY-MM-DD)\n        const formatDate = dateString => {\n          const date = new Date(dateString);\n          return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n        };\n        let profileData = {};\n        if (formData.investorType === 'individuals') {\n          profileData = {\n            first_name: String(formData.firstName),\n            email: String(formData.email),\n            last_name: String(formData.lastName),\n            phone_number: formData.phone.replace(/-/g, \"\"),\n            investorInfo: String(formData.investorType),\n            city: String(formData.city),\n            country: String(formData.country),\n            date_of_birth: String(formatDate(formData.dateOfBirth)),\n            investor_id: Number(investorId),\n            investor_profile_id: Number(investorId),\n            postal_code: String(formData.postalCode),\n            region: String(formData.state),\n            street_address: String(formData.streetAddress),\n            unit2: String(formData.unit || \"\"),\n            taxpayer_id: String(formData.taxpayerId)\n          };\n        } else if (formData.investorType === 'joints') {\n          // For joint accounts, we'll need additional fields\n          // This is a placeholder - you may need to add joint holder fields to the form\n          profileData = {\n            first_name: String(formData.firstName),\n            email: String(formData.email),\n            last_name: String(formData.lastName),\n            phone_number: formData.phone.replace(/-/g, \"\"),\n            investorInfo: String(formData.investorType),\n            city: String(formData.city),\n            country: String(formData.country),\n            date_of_birth: String(formatDate(formData.dateOfBirth)),\n            investor_id: Number(investorId),\n            postal_code: String(formData.postalCode),\n            region: String(formData.state),\n            street_address: String(formData.streetAddress),\n            unit2: String(formData.unit || \"\"),\n            taxpayer_id: String(formData.taxpayerId)\n            // Note: Joint holder fields would need to be added to the form\n          };\n        }\n        const profileResponse = await createIndividualProfile(profileData, formData.investorType);\n\n        // Use the response ID to update the investor with the profile ID\n        if (profileResponse && profileResponse.id) {\n          await updateInvestor(profileResponse.id, {});\n        }\n\n        // Redirect to payment page if access_link is available\n        console.log(\"aaaaaaaa\", accessLink);\n        // if (accessLink) {\n        //   window.location.href = accessLink;\n        // } else {\n        //   setSuccess(true);\n        // }\n      } catch (error) {\n        setErrors({\n          api: error.message || 'Failed to complete investor profile.'\n        });\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  const handlePrevStep = () => {\n    if (currentStep > 1) setCurrentStep(currentStep - 1);\n  };\n  if (success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-investor-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDF89 Investor Created Successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Investor ID: \", investorId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deal: \", selectedDeal.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => window.location.reload(),\n          children: \"Create Another Investor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-investor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDC64 Create New Investor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Deal: \", selectedDeal.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Deal ID: \", selectedDeal.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: onBack,\n        children: \"\\u2190 Back to Deals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-step ${currentStep >= 1 ? 'active' : ''}`,\n        children: \"1. Basic Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-step ${currentStep >= 2 ? 'active' : ''}`,\n        children: \"2. Investment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-step ${currentStep >= 3 ? 'active' : ''}`,\n        children: \"3. Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), errors.api && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: errors.api\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: [currentStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.firstName,\n            onChange: e => handleInputChange('firstName', e.target.value),\n            className: errors.firstName ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.lastName,\n            onChange: e => handleInputChange('lastName', e.target.value),\n            className: errors.lastName ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: formData.email,\n            onChange: e => handleInputChange('email', e.target.value),\n            className: errors.email ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            value: formData.phone,\n            onChange: e => handleInputChange('phone', e.target.value),\n            className: errors.phone ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), currentStep === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Investment Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Investment Amount (USD) *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: formData.investmentAmount,\n            onChange: e => handleInputChange('investmentAmount', e.target.value),\n            className: errors.investmentAmount ? 'error' : '',\n            min: \"300\",\n            placeholder: \"Enter amount (min $300)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), errors.investmentAmount && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.investmentAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), currentStep === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Investor Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Investor Type *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.investorType,\n            onChange: e => handleInputChange('investorType', e.target.value),\n            className: errors.investorType ? 'error' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select investor type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"individuals\",\n              children: \"Individual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"joints\",\n              children: \"Joint Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"corporation\",\n              children: \"Corporation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"trust\",\n              children: \"Trust\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), errors.investorType && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.investorType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Street Address *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.streetAddress,\n            onChange: e => handleInputChange('streetAddress', e.target.value),\n            className: errors.streetAddress ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), errors.streetAddress && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.streetAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Unit/Apt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.unit,\n            onChange: e => handleInputChange('unit', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"City *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.city,\n              onChange: e => handleInputChange('city', e.target.value),\n              className: errors.city ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), errors.city && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Postal Code *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.postalCode,\n              onChange: e => handleInputChange('postalCode', e.target.value),\n              className: errors.postalCode ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), errors.postalCode && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.postalCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"State *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.state,\n              onChange: e => handleInputChange('state', e.target.value),\n              className: errors.state ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), errors.state && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Country *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.country,\n              onChange: e => handleInputChange('country', e.target.value),\n              className: errors.country ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this), errors.country && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date of Birth *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: formData.dateOfBirth,\n              onChange: e => handleInputChange('dateOfBirth', e.target.value),\n              className: errors.dateOfBirth ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this), errors.dateOfBirth && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.dateOfBirth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Taxpayer ID *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.taxpayerId,\n              onChange: e => handleInputChange('taxpayerId', e.target.value),\n              className: errors.taxpayerId ? 'error' : '',\n              placeholder: \"XXX-XX-XXXX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), errors.taxpayerId && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.taxpayerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [currentStep > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handlePrevStep,\n          disabled: loading,\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleNextStep,\n          disabled: loading,\n          children: loading ? 'Processing...' : currentStep === 3 ? 'Create Investor' : 'Next →'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateInvestorForm, \"qveVfML3ipx12380MSQQBrykYhk=\");\n_c = CreateInvestorForm;\nexport default CreateInvestorForm;\nvar _c;\n$RefreshReg$(_c, \"CreateInvestorForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateInvestorForm","selectedDeal","onBack","_s","currentStep","setCurrentStep","formData","setFormData","firstName","lastName","email","phone","investmentAmount","investorType","streetAddress","unit","city","postalCode","state","country","dateOfBirth","taxpayerId","errors","setErrors","loading","setLoading","success","setSuccess","investorId","setInvestorId","accessLink","setAccessLink","API_BASE_URL","handleInputChange","field","value","prev","validateStep","step","Number","Object","keys","length","createInvestor","data","retryCount","console","log","response","fetch","id","method","headers","body","JSON","stringify","mode","cache","ok","errorData","json","catch","Error","message","error","status","result","delay","Math","pow","Promise","resolve","setTimeout","updateInvestor","createIndividualProfile","investorData","url","handleNextStep","first_name","last_name","phone_number","tags","deal_id","api","investmentData","investment_value","parseFloat","number_of_securities","round","price_per_security","access_link","formatDate","dateString","date","Date","getFullYear","getMonth","toString","padStart","getDate","profileData","String","replace","investorInfo","date_of_birth","investor_id","investor_profile_id","postal_code","region","street_address","unit2","taxpayer_id","profileResponse","handlePrevStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","window","location","reload","type","onChange","e","target","min","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/dev/Documents/GitHub/react-frontend/src/components/CreateInvestorForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './CreateInvestorForm.css';\n\nconst CreateInvestorForm = ({ selectedDeal, onBack }) => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState({\n    firstName: '', lastName: '', email: '', phone: '',\n    investmentAmount: '', investorType: '', streetAddress: '',\n    unit: '', city: '', postalCode: '', state: '', country: '',\n    dateOfBirth: '', taxpayerId: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [investorId, setInvestorId] = useState(null);\n  const [accessLink, setAccessLink] = useState(null);\n\n  const API_BASE_URL = 'http://localhost:3000/api';\n\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    setErrors(prev => ({ ...prev, [field]: '' }));\n  };\n\n  const validateStep = (step) => {\n    const errors = {};\n    \n    if (step === 1) {\n      if (!formData.firstName) errors.firstName = 'First name is required';\n      if (!formData.lastName) errors.lastName = 'Last name is required';\n      if (!formData.email) errors.email = 'Email is required';\n      if (!formData.phone) errors.phone = 'Phone is required';\n    }\n    \n    if (step === 2) {\n      if (!formData.investmentAmount) errors.investmentAmount = 'Investment amount is required';\n      if (Number(formData.investmentAmount) < 300) errors.investmentAmount = 'Minimum investment is $300';\n    }\n    \n    if (step === 3) {\n      if (!formData.investorType) errors.investorType = 'Investor type is required';\n      if (!formData.streetAddress) errors.streetAddress = 'Street address is required';\n      if (!formData.city) errors.city = 'City is required';\n      if (!formData.postalCode) errors.postalCode = 'Postal code is required';\n      if (!formData.state) errors.state = 'State is required';\n      if (!formData.country) errors.country = 'Country is required';\n      if (!formData.dateOfBirth) errors.dateOfBirth = 'Date of birth is required';\n      if (!formData.taxpayerId) errors.taxpayerId = 'Taxpayer ID is required';\n    }\n    \n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const createInvestor = async (data, retryCount = 0) => {\n    try {\n      console.log(`Creating investor (attempt ${retryCount + 1})...`);\n      \n      const response = await fetch(`${API_BASE_URL}/deals/${selectedDeal.id}/investors`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n        mode: 'cors',\n        cache: 'no-cache',\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      console.log('Investor created successfully');\n      return result;\n    } catch (error) {\n      console.error('Error creating investor:', error);\n      \n      // Retry up to 3 times with exponential backoff\n      if (retryCount < 3) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        console.log(`Retrying in ${delay}ms...`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return createInvestor(data, retryCount + 1);\n      }\n      \n      throw error;\n    }\n  };\n\n  const updateInvestor = async (investorId, data, retryCount = 0) => {\n    try {\n      console.log(`Updating investor (attempt ${retryCount + 1})...`);\n      \n      const response = await fetch(`${API_BASE_URL}/deals/${selectedDeal.id}/investors/${investorId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n        mode: 'cors',\n        cache: 'no-cache',\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      \n      const result = await response.json();\n      console.log('Investor updated successfully');\n      return result;\n    } catch (error) {\n      console.error('Error updating investor:', error);\n      \n      // Retry up to 3 times with exponential backoff\n      if (retryCount < 3) {\n        const delay = Math.pow(2, retryCount) * 1000; // 1s, 2s, 4s\n        console.log(`Retrying in ${delay}ms...`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return updateInvestor(investorId, data, retryCount + 1);\n      }\n      \n      throw error;\n    }\n  };\n\n  const createIndividualProfile = async (investorData, investorType) => {\n    try {\n      const url = `${API_BASE_URL}/investor_profiles/${investorType}`;\n      console.log('Making request to:', url);\n      console.log('Request data:', investorData);\n      \n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(investorData)\n      });\n\n      console.log('Response status:', response.status);\n      console.log('Response headers:', response.headers);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.log('Error response:', errorData);\n        throw new Error(errorData.message || errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error creating individual profile:', error);\n      throw error;\n    }\n  };\n\n  const handleNextStep = async () => {\n    if (!validateStep(currentStep)) return;\n\n    if (currentStep === 1) {\n      setLoading(true);\n      try {\n        const investorData = {\n          first_name: formData.firstName,\n          last_name: formData.lastName,\n          email: formData.email,\n          phone_number: formData.phone,\n          tags: ['web-form'],\n          deal_id: selectedDeal.id,\n        };\n\n        const response = await createInvestor(investorData);\n        setInvestorId(response.id); // Store the investor ID from response\n        setCurrentStep(2);\n      } catch (error) {\n        setErrors({ api: error.message || 'Failed to create investor. Please try again.' });\n      } finally {\n        setLoading(false);\n      }\n    } else if (currentStep === 2) {\n      setLoading(true);\n      try {\n        const investmentData = {\n          investment_value: parseFloat(formData.investmentAmount),\n          number_of_securities: Math.round(formData.investmentAmount / selectedDeal.price_per_security),\n        };\n\n        const response = await updateInvestor(investorId, investmentData);\n        if (response.access_link) {\n          setAccessLink(response.access_link);\n        }\n        setCurrentStep(3);\n      } catch (error) {\n        setErrors({ api: error.message || 'Failed to update investment amount. Please try again.' });\n      } finally {\n        setLoading(false);\n      }\n    } else if (currentStep === 3) {\n      setLoading(true);\n      try {\n        // Format date to match backend expectation (YYYY-MM-DD)\n        const formatDate = (dateString) => {\n          const date = new Date(dateString);\n          return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n        };\n\n        let profileData = {};\n        \n        if (formData.investorType === 'individuals') {\n          profileData = {\n            first_name: String(formData.firstName),\n            email: String(formData.email),\n            last_name: String(formData.lastName),\n            phone_number: formData.phone.replace(/-/g, \"\"),\n            investorInfo: String(formData.investorType),\n            city: String(formData.city),\n            country: String(formData.country),\n            date_of_birth: String(formatDate(formData.dateOfBirth)),\n            investor_id: Number(investorId),\n            investor_profile_id: Number(investorId),\n            postal_code: String(formData.postalCode),\n            region: String(formData.state),\n            street_address: String(formData.streetAddress),\n            unit2: String(formData.unit || \"\"),\n            taxpayer_id: String(formData.taxpayerId),\n          };\n        } else if (formData.investorType === 'joints') {\n          // For joint accounts, we'll need additional fields\n          // This is a placeholder - you may need to add joint holder fields to the form\n          profileData = {\n            first_name: String(formData.firstName),\n            email: String(formData.email),\n            last_name: String(formData.lastName),\n            phone_number: formData.phone.replace(/-/g, \"\"),\n            investorInfo: String(formData.investorType),\n            city: String(formData.city),\n            country: String(formData.country),\n            date_of_birth: String(formatDate(formData.dateOfBirth)),\n            investor_id: Number(investorId),\n            postal_code: String(formData.postalCode),\n            region: String(formData.state),\n            street_address: String(formData.streetAddress),\n            unit2: String(formData.unit || \"\"),\n            taxpayer_id: String(formData.taxpayerId),\n            // Note: Joint holder fields would need to be added to the form\n          };\n        }\n\n        const profileResponse = await createIndividualProfile(profileData, formData.investorType);\n        \n        // Use the response ID to update the investor with the profile ID\n        if (profileResponse && profileResponse.id) {\n          await updateInvestor(profileResponse.id, {});\n        }\n        \n        // Redirect to payment page if access_link is available\n        console.log(\"aaaaaaaa\", accessLink)\n        // if (accessLink) {\n        //   window.location.href = accessLink;\n        // } else {\n        //   setSuccess(true);\n        // }\n      } catch (error) {\n        setErrors({ api: error.message || 'Failed to complete investor profile.' });\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  const handlePrevStep = () => {\n    if (currentStep > 1) setCurrentStep(currentStep - 1);\n  };\n\n  if (success) {\n    return (\n      <div className=\"create-investor-container\">\n        <div className=\"success-message\">\n          <h2>🎉 Investor Created Successfully!</h2>\n          <p>Investor ID: {investorId}</p>\n          <p>Deal: {selectedDeal.title}</p>\n          <button className=\"btn btn-primary\" onClick={() => window.location.reload()}>\n            Create Another Investor\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"create-investor-container\">\n              <div className=\"form-header\">\n          <h1>👤 Create New Investor</h1>\n          <p>Deal: {selectedDeal.title}</p>\n          <p>Deal ID: {selectedDeal.id}</p>\n          <button className=\"back-btn\" onClick={onBack}>\n            ← Back to Deals\n          </button>\n        </div>\n\n      <div className=\"progress-bar\">\n        <div className={`progress-step ${currentStep >= 1 ? 'active' : ''}`}>1. Basic Info</div>\n        <div className={`progress-step ${currentStep >= 2 ? 'active' : ''}`}>2. Investment</div>\n        <div className={`progress-step ${currentStep >= 3 ? 'active' : ''}`}>3. Details</div>\n      </div>\n\n      {errors.api && <div className=\"alert alert-danger\">{errors.api}</div>}\n\n      <div className=\"form-content\">\n        {currentStep === 1 && (\n          <div className=\"form-step\">\n            <h3>Basic Information</h3>\n            <div className=\"form-group\">\n              <label>First Name *</label>\n              <input\n                type=\"text\"\n                value={formData.firstName}\n                onChange={(e) => handleInputChange('firstName', e.target.value)}\n                className={errors.firstName ? 'error' : ''}\n              />\n              {errors.firstName && <span className=\"error-message\">{errors.firstName}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Last Name *</label>\n              <input\n                type=\"text\"\n                value={formData.lastName}\n                onChange={(e) => handleInputChange('lastName', e.target.value)}\n                className={errors.lastName ? 'error' : ''}\n              />\n              {errors.lastName && <span className=\"error-message\">{errors.lastName}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Email *</label>\n              <input\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => handleInputChange('email', e.target.value)}\n                className={errors.email ? 'error' : ''}\n              />\n              {errors.email && <span className=\"error-message\">{errors.email}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Phone *</label>\n              <input\n                type=\"tel\"\n                value={formData.phone}\n                onChange={(e) => handleInputChange('phone', e.target.value)}\n                className={errors.phone ? 'error' : ''}\n              />\n              {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\n            </div>\n          </div>\n        )}\n\n        {currentStep === 2 && (\n          <div className=\"form-step\">\n            <h3>Investment Amount</h3>\n            <div className=\"form-group\">\n              <label>Investment Amount (USD) *</label>\n              <input\n                type=\"number\"\n                value={formData.investmentAmount}\n                onChange={(e) => handleInputChange('investmentAmount', e.target.value)}\n                className={errors.investmentAmount ? 'error' : ''}\n                min=\"300\"\n                placeholder=\"Enter amount (min $300)\"\n              />\n              {errors.investmentAmount && <span className=\"error-message\">{errors.investmentAmount}</span>}\n            </div>\n          </div>\n        )}\n\n        {currentStep === 3 && (\n          <div className=\"form-step\">\n            <h3>Investor Details</h3>\n            \n            <div className=\"form-group\">\n              <label>Investor Type *</label>\n              <select\n                value={formData.investorType}\n                onChange={(e) => handleInputChange('investorType', e.target.value)}\n                className={errors.investorType ? 'error' : ''}\n              >\n                <option value=\"\">Select investor type</option>\n                <option value=\"individuals\">Individual</option>\n                <option value=\"joints\">Joint Account</option>\n                <option value=\"corporation\">Corporation</option>\n                <option value=\"trust\">Trust</option>\n              </select>\n              {errors.investorType && <span className=\"error-message\">{errors.investorType}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Street Address *</label>\n              <input\n                type=\"text\"\n                value={formData.streetAddress}\n                onChange={(e) => handleInputChange('streetAddress', e.target.value)}\n                className={errors.streetAddress ? 'error' : ''}\n              />\n              {errors.streetAddress && <span className=\"error-message\">{errors.streetAddress}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Unit/Apt</label>\n              <input\n                type=\"text\"\n                value={formData.unit}\n                onChange={(e) => handleInputChange('unit', e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>City *</label>\n                <input\n                  type=\"text\"\n                  value={formData.city}\n                  onChange={(e) => handleInputChange('city', e.target.value)}\n                  className={errors.city ? 'error' : ''}\n                />\n                {errors.city && <span className=\"error-message\">{errors.city}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Postal Code *</label>\n                <input\n                  type=\"text\"\n                  value={formData.postalCode}\n                  onChange={(e) => handleInputChange('postalCode', e.target.value)}\n                  className={errors.postalCode ? 'error' : ''}\n                />\n                {errors.postalCode && <span className=\"error-message\">{errors.postalCode}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>State *</label>\n                <input\n                  type=\"text\"\n                  value={formData.state}\n                  onChange={(e) => handleInputChange('state', e.target.value)}\n                  className={errors.state ? 'error' : ''}\n                />\n                {errors.state && <span className=\"error-message\">{errors.state}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Country *</label>\n                <input\n                  type=\"text\"\n                  value={formData.country}\n                  onChange={(e) => handleInputChange('country', e.target.value)}\n                  className={errors.country ? 'error' : ''}\n                />\n                {errors.country && <span className=\"error-message\">{errors.country}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Date of Birth *</label>\n                <input\n                  type=\"date\"\n                  value={formData.dateOfBirth}\n                  onChange={(e) => handleInputChange('dateOfBirth', e.target.value)}\n                  className={errors.dateOfBirth ? 'error' : ''}\n                />\n                {errors.dateOfBirth && <span className=\"error-message\">{errors.dateOfBirth}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label>Taxpayer ID *</label>\n                <input\n                  type=\"text\"\n                  value={formData.taxpayerId}\n                  onChange={(e) => handleInputChange('taxpayerId', e.target.value)}\n                  className={errors.taxpayerId ? 'error' : ''}\n                  placeholder=\"XXX-XX-XXXX\"\n                />\n                {errors.taxpayerId && <span className=\"error-message\">{errors.taxpayerId}</span>}\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"form-actions\">\n          {currentStep > 1 && (\n            <button className=\"btn btn-secondary\" onClick={handlePrevStep} disabled={loading}>\n              ← Previous\n            </button>\n          )}\n          \n          <button className=\"btn btn-primary\" onClick={handleNextStep} disabled={loading}>\n            {loading ? 'Processing...' : currentStep === 3 ? 'Create Investor' : 'Next →'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateInvestorForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}